<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Decentralized Data Science</title>
    <link>https://exquisite-meringue-7af06d.netlify.app/</link>
    <description>Recent content on Decentralized Data Science</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://exquisite-meringue-7af06d.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Julia Eval</title>
      <link>https://exquisite-meringue-7af06d.netlify.app/posts/julia-eval/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://exquisite-meringue-7af06d.netlify.app/posts/julia-eval/</guid>
      <description>using Dates format = DateFormat(&amp;#34;yyyymmdd&amp;#34;) Date(&amp;#34;19870913&amp;#34;, format) dateformat&amp;#34;yyyymmdd&amp;#34; 1987-09-13 1 + 1 2 </description>
    </item>
    
    <item>
      <title>Nushell</title>
      <link>https://exquisite-meringue-7af06d.netlify.app/posts/nushell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://exquisite-meringue-7af06d.netlify.app/posts/nushell/</guid>
      <description>DataFram Commands vast export nu -c &amp;#39;vast export -n 1 json | from json&amp;#39; â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•® â”‚ ts â”‚ 2022-09-08T05:16:18.864804 â”‚ â”‚ id.orig_h â”‚ 192.168.99.129 â”‚ â”‚ id.orig_p â”‚ 49835 â”‚ â”‚ id.resp_h â”‚ 192.168.2.254 â”‚ â”‚ id.resp_p â”‚ 110 â”‚ â”‚ uid â”‚ CdveCb2nALNTFcT2U5 â”‚ â”‚ start_time â”‚ 2022-09-08T05:16:18.757662 â”‚ â”‚ end_time â”‚ â”‚ â”‚ duration â”‚ 107.14ms â”‚ â”‚ service â”‚ [list 0 items] â”‚ â”‚ trans_depth â”‚ 1 â”‚ â”‚ helo â”‚ â”‚ â”‚ mailfrom â”‚ â”‚ â”‚ rcptto â”‚ â”‚ â”‚ date â”‚ â”‚ â”‚ from â”‚ â”‚ â”‚ to â”‚ â”‚ â”‚ cc â”‚ â”‚ â”‚ reply_to â”‚ â”‚ â”‚ msg_id â”‚ â”‚ â”‚ in_reply_to â”‚ â”‚ â”‚ subject â”‚ â”‚ â”‚ x_originating_ip â”‚ â”‚ â”‚ first_received â”‚ â”‚ â”‚ second_received â”‚ â”‚ â”‚ last_reply â”‚ OK Dovecot ready.</description>
    </item>
    
    <item>
      <title>Phishing</title>
      <link>https://exquisite-meringue-7af06d.netlify.app/posts/phishing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://exquisite-meringue-7af06d.netlify.app/posts/phishing/</guid>
      <description>C4 Diagram &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34; standalone=&#34;no&#34;?&gt;Python[Container]Training DataSet[Container]Phishing.url.data[parser data]Â merge the phishing.url.datafrom zeekPhishing.url.result[match indicates]Â get phishing-url-result.jsonby python scriptdone.phishing.result[vast export json&#39;done.phishing.url.result.result== 0&#39;]Â get the result by themachine-learning modeltrue/false.phishing.result[vast export jsontrue/false.phishing.url.result.result== 0&#39;]Â After analyzing done.result,pick the result to true/falsetypeTraining model[get model]Â Through machine learningalgorithms, we can generaterelevant phishing indicatesmodels throughtrue.phishing.result datasetNew Phishing model[extended result.dataSet]Â identify suspicious,anomalous or misjudgmentdataMachine Learning[Traning Phishing Model]Â phishing-url-resutl.json -&amp;gt;probeï¼Œtrue/false.phishing-url-result.json-&amp;gt; new phishing-modelVast[Query URL]Â Query EngineGo Spider Application[extracting relevant info]Â phishing-features.json -&amp;gt;indicates.</description>
    </item>
    
    <item>
      <title>Tullia</title>
      <link>https://exquisite-meringue-7af06d.netlify.app/posts/tullia/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://exquisite-meringue-7af06d.netlify.app/posts/tullia/</guid>
      <description>runtimes unwrapped tullia run julia-cli --runtime unwrapped --log-level debug [90m11:02PM[0m [33mDBG[0m parsed args [36mconfig=[0m{&amp;#34;DagFlake&amp;#34;:&amp;#34;.#tullia.x86_64-linux.dag&amp;#34;,&amp;#34;Mode&amp;#34;:&amp;#34;cli&amp;#34;,&amp;#34;Runtime&amp;#34;:&amp;#34;unwrapped&amp;#34;,&amp;#34;Task&amp;#34;:&amp;#34;julia-cli&amp;#34;,&amp;#34;TaskFlake&amp;#34;:&amp;#34;.#tullia.x86_64-linux.task&amp;#34;} path &amp;#39;/home/gtrun/ghq/github.com/GTrunSec/DeSci/docs/org&amp;#39; does not contain a &amp;#39;flake.nix&amp;#39;, searching up warning: Git tree &amp;#39;/home/gtrun/ghq/github.com/GTrunSec/DeSci&amp;#39; is dirty [90m11:02PM[0m [1m[31mFTL[0m[0m starting CLI [36merror=[0m[31m&amp;#34;open /dev/tty: no such device or address&amp;#34;[0m Podman tullia run julia-cli --runtime podman --log-level debug [90m11:02PM[0m [33mDBG[0m parsed args [36mconfig=[0m{&amp;ldquo;DagFlake&amp;rdquo;:&amp;quot;.#tullia.x86_64-linux.dag&amp;quot;,&amp;ldquo;Mode&amp;rdquo;:&amp;ldquo;cli&amp;rdquo;,&amp;ldquo;Runtime&amp;rdquo;:&amp;ldquo;podman&amp;rdquo;,&amp;ldquo;Task&amp;rdquo;:&amp;ldquo;julia-cli&amp;rdquo;,&amp;ldquo;TaskFlake&amp;rdquo;:&amp;quot;.#tullia.x86_64-linux.task&amp;quot;} path &amp;lsquo;/home/gtrun/ghq/github.com/GTrunSec/DeSci/docs/org&amp;rsquo; does not contain a &amp;lsquo;flake.nix&amp;rsquo;, searching up warning: Git tree &amp;lsquo;/home/gtrun/ghq/github.com/GTrunSec/DeSci&amp;rsquo; is dirty [90m11:02PM[0m [1m[31mFTL[0m[0m starting CLI [36merror=[0m[31m&amp;quot;open /dev/tty: no such device or address&amp;quot;[0m</description>
    </item>
    
    <item>
      <title>Usage</title>
      <link>https://exquisite-meringue-7af06d.netlify.app/posts/usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://exquisite-meringue-7af06d.netlify.app/posts/usage/</guid>
      <description>devshell With nix develop nix develop &amp;amp;&amp;amp; menu With direnv direnv allow Docs address: http://localhost:1313/LambdaHunt/posts run hugo server nix develop .#doc --command mkdoc server sync your docs nix develop .#doc --command mkdoc </description>
    </item>
    
  </channel>
</rss>
