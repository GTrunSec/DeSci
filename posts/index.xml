<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Decentralized Data Science</title>
    <link>https://exquisite-meringue-7af06d.netlify.app/posts/</link>
    <description>Recent content in Posts on Decentralized Data Science</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Feb 2023 07:26:52 +0000</lastBuildDate><atom:link href="https://exquisite-meringue-7af06d.netlify.app/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Julia Eval</title>
      <link>https://exquisite-meringue-7af06d.netlify.app/posts/julia-eval/</link>
      <pubDate>Sat, 18 Feb 2023 07:26:52 +0000</pubDate>
      
      <guid>https://exquisite-meringue-7af06d.netlify.app/posts/julia-eval/</guid>
      <description>using Dates format = DateFormat(&amp;#34;yyyymmdd&amp;#34;) Date(&amp;#34;19870913&amp;#34;, format) 1987-09-13 </description>
    </item>
    
    <item>
      <title>Attack Models</title>
      <link>https://exquisite-meringue-7af06d.netlify.app/posts/attack-models/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://exquisite-meringue-7af06d.netlify.app/posts/attack-models/</guid>
      <description>Queries cat $(2&amp;gt;/dev/null nix build .#x86_64-linux.models.lib.mitre-attack-queries --print-out-paths --no-link) { &amp;#34;T0000&amp;#34;: { &amp;#34;Azure Sentinel&amp;#34;: { &amp;#34;name&amp;#34;: &amp;#34;Suspicious Filename Used&amp;#34;, &amp;#34;product&amp;#34;: &amp;#34;Azure Sentinel&amp;#34;, &amp;#34;query&amp;#34;: &amp;#34;Sysmon| where EventID == 1 and (process_path == \&amp;#34;a.exe\&amp;#34;or process_path == \&amp;#34;b.exe\&amp;#34;or process_path == \&amp;#34;c.exe\&amp;#34;or process_path == \&amp;#34;d.exe\&amp;#34;or process_path == \&amp;#34;e.exe\&amp;#34;or process_path == \&amp;#34;f.exe\&amp;#34;or process_path == \&amp;#34;g.exe\&amp;#34;or process_path == \&amp;#34;h.exe\&amp;#34;or process_path == \&amp;#34;i.exe\&amp;#34;or process_path == \&amp;#34;j.exe\&amp;#34;or process_path == \&amp;#34;k.exe\&amp;#34;or process_path == \&amp;#34;l.exe\&amp;#34;or process_path == \&amp;#34;m.exe\&amp;#34;or process_path == \&amp;#34;n.exe\&amp;#34;or process_path == \&amp;#34;o.</description>
    </item>
    
    <item>
      <title>Bash</title>
      <link>https://exquisite-meringue-7af06d.netlify.app/posts/bash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://exquisite-meringue-7af06d.netlify.app/posts/bash/</guid>
      <description>NuShell echo </description>
    </item>
    
    <item>
      <title>observablehq</title>
      <link>https://exquisite-meringue-7af06d.netlify.app/posts/observablehq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://exquisite-meringue-7af06d.netlify.app/posts/observablehq/</guid>
      <description>//| echo: true Plot.rectY(filtered, Plot.binX( {y: &amp;#34;count&amp;#34;}, {x: &amp;#34;body_mass&amp;#34;, fill: &amp;#34;species&amp;#34;, thresholds: 20} )) .plot({ facet: { data: filtered, x: &amp;#34;sex&amp;#34;, y: &amp;#34;species&amp;#34;, marginRight: 80 }, marks: [ Plot.frame(), ] } ) </description>
    </item>
    
    <item>
      <title>Phishing</title>
      <link>https://exquisite-meringue-7af06d.netlify.app/posts/phishing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://exquisite-meringue-7af06d.netlify.app/posts/phishing/</guid>
      <description>C4 Diagram &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34; standalone=&#34;no&#34;?&gt;Python[Container]Training DataSet[Container]Phishing.url.data[parser data] merge the phishing.url.datafrom zeekPhishing.url.result[match indicates] get phishing-url-result.jsonby python scriptdone.phishing.result[vast export json&#39;done.phishing.url.result.result== 0&#39;] get the result by themachine-learning modeltrue/false.phishing.result[vast export jsontrue/false.phishing.url.result.result== 0&#39;] After analyzing done.result,pick the result to true/falsetypeTraining model[get model] Through machine learningalgorithms, we can generaterelevant phishing indicatesmodels throughtrue.phishing.result datasetNew Phishing model[extended result.dataSet] identify suspicious,anomalous or misjudgmentdataMachine Learning[Traning Phishing Model] phishing-url-resutl.json -&amp;gt;probe，true/false.phishing-url-result.json-&amp;gt; new phishing-modelVast[Query URL] Query EngineGo Spider Application[extracting relevant info] phishing-features.json -&amp;gt;indicates.</description>
    </item>
    
    <item>
      <title>Usage</title>
      <link>https://exquisite-meringue-7af06d.netlify.app/posts/usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://exquisite-meringue-7af06d.netlify.app/posts/usage/</guid>
      <description>devshell With nix develop nix develop &amp;amp;&amp;amp; menu With direnv direnv allow Docs address: http://localhost:1313/LambdaHunt/posts run hugo server nix develop .#doc --command mkdoc server sync your docs nix develop .#doc --command mkdoc </description>
    </item>
    
  </channel>
</rss>
